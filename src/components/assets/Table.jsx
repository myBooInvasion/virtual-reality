/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 Table.glb --shadows --transform
*/

import React from 'react';
import { useGLTF } from '@react-three/drei';
import { RigidBody } from '@react-three/rapier';

const formasiTable = [
  {
    vertical: -4,
    horizontal: [3.5, 2, -2, -3.5],
  },
  {
    vertical: -2.5,
    horizontal: [3.5, 2, -2, -3.5],
  },
  {
    vertical: -1,
    horizontal: [3.5, 2, -2, -3.5],
  },
  {
    vertical: 0.5,
    horizontal: [3.5, 2, -2, -3.5],
  },
];

export function Table(props) {
  const { nodes, materials } = useGLTF('/model/Table-transformed.glb');

  return (
    <group {...props} dispose={null}>
      {
        formasiTable.map((baris) =>
          baris.horizontal.map((kolom, index) => (
            <RigidBody key={index} colliders='hull' type='fixed'>
              <group name='Table' rotation={[0, Math.PI / 2, 0]} position={[baris.vertical, 0, kolom]}>
                <mesh castShadow receiveShadow geometry={nodes.Plane.geometry} material={materials['white oak']} />
                <mesh castShadow receiveShadow geometry={nodes.Plane_1.geometry} material={materials['dark oak']} />
                <mesh castShadow receiveShadow geometry={nodes.handles.geometry} material={materials.metal} position={[0.5, 0.42, 0.26]} rotation={[Math.PI / 2, 0, 0]} />
                <mesh castShadow receiveShadow geometry={nodes.lock.geometry} material={materials['metal.001']} position={[0.33, 0.73, 0.26]} />
              </group>
            </RigidBody>
          ))
        )
      }
    </group>
  );
}

useGLTF.preload('/model/Table-transformed.glb');
